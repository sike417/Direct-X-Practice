<Page
    x:Class="DirectXSampleLibrary.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <Style x:Key="PaneToggleButtonStyle1" TargetType="ToggleButton">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
            <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}"/>
            <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" Height="{TemplateBinding MinHeight}" MinWidth="{TemplateBinding MinWidth}" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{ThemeResource PaneToggleButtonWidth}"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ButtonBackgroundPointerOver}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ButtonBackgroundPressed}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ButtonBackgroundDisabled}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="CheckedPressed">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource ButtonBackgroundPointerOver}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Viewbox x:Name="IconHost" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="16" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="16">
                                <TextBlock x:Name="Icon" AutomationProperties.AccessibilityView="Raw" FontSize="{TemplateBinding FontSize}" Text="&#xE700;"/>
          
                            </Viewbox>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Content}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" VerticalContentAlignment="Center"/>
                            <Border x:Name="RevealBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ListViewItemTemplate1">
            <Grid>
                <StackPanel Orientation="Vertical">
                    <Viewbox Width="250">
                        <Image Source="{Binding ImageLocation}"/>
                    </Viewbox>
                    <TextBlock HorizontalAlignment="Center" Text="{Binding SceneName}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border x:Name="SwapChainPanelBorder" Grid.Column="1" BorderBrush="Black" BorderThickness="1 1 1 1">
            <SwapChainPanel x:Name="swapChainPanel" SizeChanged="swapChainPanel_SizeChanged"/>
        </Border>

        <Canvas>
            <Grid x:Name="RootGrid" Height="{Binding ElementName=SwapChainPanelBorder, Path=ActualHeight}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="PaneToggleButtonGrid" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="40" Background="LightGray">
                    <ToggleButton x:Name="TogglePaneButton" Style="{StaticResource PaneToggleButtonStyle1}" VerticalAlignment="Top"/>
                </Grid>
                <Canvas Grid.Column="1" Width="300"/>
                <Grid Visibility="{Binding ElementName=TogglePaneButton, Path=IsChecked}" Grid.Column="1" Background="Gray" Opacity=".5">
                    <ListView x:Name="SceneSelectorListView" 
                              ItemTemplate="{StaticResource ListViewItemTemplate1}" 
                              ItemsSource="{x:Bind ScenePicker.ObservableSceneList, Mode=OneWay}" 
                              SelectedItem="{x:Bind ScenePicker.CurrentlySelectedSceneItem}"
                              SelectionChanged="{x:Bind ScenePicker.SelectionChanged}"/>
                </Grid>
            </Grid>
        </Canvas>

        <CommandBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Background="Black" Foreground="White">
            <AppBarButton Icon="Camera" Label="Save Image" Foreground="White" Click="captureScreenImage"/>
            <AppBarToggleButton Icon="Video" Label="Save Clip" Foreground="White" Click="toggleClipCapture"/>
        </CommandBar>
    </Grid>
</Page>
